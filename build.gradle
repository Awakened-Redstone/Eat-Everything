plugins {
    id "me.modmuss50.mod-publish-plugin" version "0.8.4"
    id 'fabric-loom' version '1.9-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

repositories {
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    //modRuntimeOnly "maven.modrinth:default-components:0.1.2"
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

String CHANGELOG = new File("CHANGELOG.md").exists() ? file("CHANGELOG.md").text : "No changelog provided"

String projectVersion = project.version.toString()
List<String> projectVersionNumber = projectVersion.split("-", 2)
String projectVersionName = "Release ${projectVersionNumber[0]}"
if (projectVersion.contains("beta")) {
    List<String> projectBeta = projectVersionNumber[1].split("\\.", 2)
    projectVersionName = "${projectVersionNumber[0]} - Beta ${projectBeta[1]}"
    versionType = "beta"
} else if (projectVersion.contains("alpha")) {
    List<String> projectAlpha = projectVersionNumber[1].split("\\.", 2)
    projectVersionName = "${projectVersionNumber[0]} - Alpha ${projectAlpha[1]}"
    versionType = "alpha"
} else if (projectVersion.contains("rc")) {
    List<String> projectRC = projectVersionNumber[1].split("\\.", 2)
    projectVersionName = "${projectVersionNumber[0]} - Release Candidate ${projectRC[1]}"
    versionType = "beta"
}

publishMods {
    file = remapJar.archiveFile
    changelog = CHANGELOG
    type = STABLE
    modLoaders.add("fabric")
    displayName = projectVersionName

    /*curseforge {
        setDisplayName(projectVersionName)
        projectId = "1099230"
        projectSlug = "default-components" // Required for discord webhook
        accessToken = providers.gradleProperty("CURSEFORGE_TOKEN")
        minecraftVersions.add(property("minecraft_version"))
        requires("fabric-api")
    }*/
    modrinth {
        setDisplayName(projectVersionName)
        projectId = "wClXGUiL"
        accessToken = providers.gradleProperty("MODRINTH_TOKEN")
        minecraftVersions.add(property("minecraft_version"))
        requires("default-components")
    }
    /*github {
        repository = "test/example"
        accessToken = providers.gradleProperty("GITHUB_TOKEN")
        commitish = "main"
    }*/
    discord {
        content = """
# Eat Everything | ${projectVersionName}

${CHANGELOG}"""

        avatarUrl = "https://cdn.discordapp.com/avatars/1268055578073108574/73106a33f497ea5f2c676bcfb4816917.webp"
        username = "Mod updates"
        webhookUrl = providers.gradleProperty("DISCORD_WEBHOOK")
        dryRunWebhookUrl = providers.gradleProperty("DRY_WEBHOOK")
        style {
            look = "MODERN"
            link = "BUTTON"
            thumbnailUrl = "https://cdn.modrinth.com/data/wClXGUiL/icon.png"
            color = "modrinth"
        }
    }
}
